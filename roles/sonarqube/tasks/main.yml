---
# - name: Create a sonar user.
  # mysql_user:
    # name: "{{ sonar_mysql_username }}"
    # host: "{{ item }}"
    # priv: "{{ sonar_mysql_database }}.*:ALL"
    # password: "{{ sonar_mysql_password }}"
    # with_items: "{{ sonar_mysql_allowed_hosts }}"

- name: '确认sonar用户组是否存在'
  group: name="{{ sonar_os_group }}" state=present
  when: sonar_create_os_group
  sudo: true

- name: '确认sonar用户是否存在'
  user: name="{{ sonar_os_user }}" group="{{ sonar_os_group }}" shell="{{ sonar_os_user_shell }}" state=present
  when: sonar_create_os_user
  sudo: true

- name: Download Sonar.
  get_url:
    url: "{{ sonar_download_url }}"
    dest: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    validate_certs: "{{ sonar_download_validate_certs }}"

- name: Unzip Sonar.
  unarchive:
    src: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    dest: {{ sonar_home }}
    copy: false
    creates: {{ sonar_home }}/sonar/COPYING

- name: Move Sonar into place.
  command: >
    mv {{ sonar_home }}/{{ sonar_version_directory }} {{ sonar_home }}/sonar
    creates={{ sonar_home }}/sonar/COPYING
- include_tasks: configure.yml

- name: Symlink sonar bin.
  file:
    src: {{ sonar_home }}/sonar/bin/linux-x86-64/sonar.sh
    dest: /usr/bin/sonar
    state: link
  register: sonar_symlink

- name: Add sonar as init script for service management.
  file:
    src: {{ sonar_home }}/sonar/bin/linux-x86-64/sonar.sh
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

- name: '更新目录权限'
  shell: 'chown -R {{ sonar_os_group  }}.{{ sonar_os_user }} /home/sonar/sonar'

- name: '配置启动脚本'
  template:
    src: sonar.start.sh.j2
    dest: {{ sonar_home }}/sonar/sonar.start.sh
    owner: {{ sonar_os_uesr }}
    group: {{ sonar_os_group }}
    mode: 0755

# - name: '用户{{ sonar_os_user }}启动sonar'
  # shell: 'su {{ sonar_os_user }} | /home/sonar/sonar/bin/linux-x86-64/sonar.sh restart'

# - name: Copy SonarQube systemd unit file into place (for systemd systems).
  # template:
    # src: sonar.unit.j2
    # dest: /etc/systemd/system/sonar.service
    # owner: {{ sonar_os_uesr }}
    # group: {{ sonar_os_group }}
    # mode: 0755
  # when: "ansible_service_mgr == 'systemd'"

# - name: Ensure Sonar is running and set to start on boot.
  # service: name=sonar state=started enabled=yes

# - name: Allow Sonar time to build on first start.
  # pause: seconds=180
  # when: sonar_symlink.changed
  # tags: ['skip_ansible_lint']

# - name: Make sure Sonar is responding on the configured port.
  # wait_for: port={{ sonar_port }} delay=3 timeout=300
